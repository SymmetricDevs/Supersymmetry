import static globals.Globals.*
import classes.*;

def recipesToRemove = [
        'gregtech:manganese_phosphide_wire_single',
        'gregtech:uranium_triplatinum_wire_single',
        'gregtech:indium_tin_barium_titanium_cuprate_wire_single',
        'gregtech:uranium_rhodium_dinaquadide_wire_single',
        'gregtech:enriched_naquadah_trinium_europium_duranide_wire_single',
        'gregtech:ruthenium_trinium_americium_neutronate_wire_single'
]

for(name in recipesToRemove) {
    crafting.remove(name)
}

def EBF = recipemap('electric_blast_furnace')
def EXTRUDER = recipemap('extruder')
def CHEMICAL_BATH = recipemap('chemical_bath')
def CANNER = recipemap('canner')
def ASSEMBLER = recipemap('assembler')

def allSuperconductors = ["ManganesePhosphide", "MagnesiumDiboride", "MercuryBariumCalciumCuprate", "UraniumTriplatinum", "SamariumIronArsenicOxide", "IndiumTinBariumTitaniumCuprate", "UraniumRhodiumDinaquadide", "EnrichedNaquadahTriniumEuropiumDuranide", "RutheniumTriniumAmericiumNeutronate"]
def lowTempSuperconductors = ["ManganesePhosphide", "UraniumTriplatinum", "IndiumTinBariumTitaniumCuprate", "UraniumRhodiumDinaquadide", "EnrichedNaquadahTriniumEuropiumDuranide", "RutheniumTriniumAmericiumNeutronate"]
def highTempSuperconductors = ["MagnesiumDiboride", "MercuryBariumCalciumCuprate", "SamariumIronArsenicOxide"]
def criticalTemperatures = [40, 42, 140, 5, 65, 5, 5, 5, 5]

for (lowTempSuperconductor in lowTempSuperconductors) {
    //REMOVE AUTOGENERATED GT RECIPES FOR SUPERCONDUCTORS
    mods.gregtech.wiremill.removeByInput(7, [metaitem('wireGtSingle' + lowTempSuperconductor), metaitem('circuit.integrated').withNbt(["Configuration": 1])], null)

    ASSEMBLER.recipeBuilder()
            .inputs(metaitem('wireGtSingleCopper'))
            .inputs(metaitem('wireFine' + lowTempSuperconductor) * 8)
            .inputs(metaitem('foilCopper'))
            .outputs(metaitem('assembly' + lowTempSuperconductor))
            .duration(200)
            .EUt(30)
            .buildAndRegister();

    EXTRUDER.recipeBuilder()
            .inputs(metaitem('assembly' + lowTempSuperconductor))
            .notConsumable(metaitem('shape.extruder.wire'))
            .outputs(metaitem('base' + lowTempSuperconductor) * 4)
            .duration(200)
            .EUt(30)
            .buildAndRegister();
}

for (highTempSuperconductor in highTempSuperconductors) {
    CANNER.recipeBuilder()
            .inputs(metaitem('pipeTinyFluidSilver'))
            .inputs(metaitem('dust' + highTempSuperconductor))
            .outputs(metaitem('canned' + highTempSuperconductor))
            .duration(200)
            .EUt(30)
            .buildAndRegister();

    EBF.recipeBuilder()
            .inputs(metaitem('canned' + highTempSuperconductor))
            .fluidInputs(fluid('argon') * 50)
            .outputs(metaitem('tube' + highTempSuperconductor))
            .blastFurnaceTemp(1100)
            .duration(200)
            .EUt(120)
            .buildAndRegister();

    EXTRUDER.recipeBuilder()
            .inputs(metaitem('tube' + highTempSuperconductor))
            .notConsumable(metaitem('shape.extruder.wire'))
            .outputs(metaitem('base' + highTempSuperconductor) * 4)
            .duration(200)
            .EUt(30)
            .buildAndRegister();
}

for (def i = 0; i < 9; i++) {
    //REMOVE AUTOGENERATED GT RECIPES FOR SUPERCONDUCTORS
    if (i < 2) {
        mods.gregtech.extruder.removeByInput(42, [metaitem('ingot' + allSuperconductors[i]), metaitem('shape.extruder.wire')], null)
        mods.gregtech.wiremill.removeByInput(7, [metaitem('ingot' + allSuperconductors[i]), metaitem('circuit.integrated').withNbt(["Configuration": 1])], null)
        mods.gregtech.wiremill.removeByInput(7, [metaitem('ingot' + allSuperconductors[i]), metaitem('circuit.integrated').withNbt(["Configuration": 2])], null)
        mods.gregtech.wiremill.removeByInput(7, [metaitem('ingot' + allSuperconductors[i]) * 2, metaitem('circuit.integrated').withNbt(["Configuration": 4])], null)
        mods.gregtech.wiremill.removeByInput(7, [metaitem('ingot' + allSuperconductors[i]) * 4, metaitem('circuit.integrated').withNbt(["Configuration": 8])], null)
        mods.gregtech.wiremill.removeByInput(7, [metaitem('ingot' + allSuperconductors[i]) * 8, metaitem('circuit.integrated').withNbt(["Configuration": 16])], null)
    } else {
        mods.gregtech.extruder.removeByInput(180, [metaitem('ingot' + allSuperconductors[i]), metaitem('shape.extruder.wire')], null)
        mods.gregtech.wiremill.removeByInput(30, [metaitem('ingot' + allSuperconductors[i]), metaitem('circuit.integrated').withNbt(["Configuration": 1])], null)
        mods.gregtech.wiremill.removeByInput(30, [metaitem('ingot' + allSuperconductors[i]), metaitem('circuit.integrated').withNbt(["Configuration": 2])], null)
        mods.gregtech.wiremill.removeByInput(30, [metaitem('ingot' + allSuperconductors[i]) * 2, metaitem('circuit.integrated').withNbt(["Configuration": 4])], null)
        mods.gregtech.wiremill.removeByInput(30, [metaitem('ingot' + allSuperconductors[i]) * 4, metaitem('circuit.integrated').withNbt(["Configuration": 8])], null)
        mods.gregtech.wiremill.removeByInput(30, [metaitem('ingot' + allSuperconductors[i]) * 8, metaitem('circuit.integrated').withNbt(["Configuration": 16])], null)
    }

    for (CryoGas in ICryoGas.cryo_gases) {
        if (criticalTemperatures[i] > CryoGas.fluid_temperature) {
            CHEMICAL_BATH.recipeBuilder()
                    .inputs(metaitem('base' + allSuperconductors[i]))
                    .fluidInputs(liquid(CryoGas.liquid_gas) * 2)
                    .outputs(metaitem('wireGtSingle' + allSuperconductors[i]))
                    .duration(50)
                    .EUt(Globals.voltAmps[i + 1])
                    .buildAndRegister();
        }
    }
}