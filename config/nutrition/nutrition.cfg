# Configuration file

"death penalty" {
    # The nutrition value subtracted from each nutrient upon death. [range: 0 ~ 100, default: 15]
    I:DeathPenaltyLoss=15

    # The minimum nutrition value that the death penalty may reduce to. [range: 0 ~ 100, default: 30]
    I:DeathPenaltyMin=30

    # On death, should nutrition be reset to DeathPenaltyMin if it's fallen below that value?
    # This is recommended to prevent death loops caused by negative effects. [default: true]
    B:DeathPenaltyReset=true
}


gui {
    # The anchor defines which side of the origin to position the button against.
    # Accepted values: top, right, bottom, left, top-left, top-right, bottom-right, bottom-left, center [default: top-left]
    S:ButtonAnchor=top-left

    # The origin defines the object which the nutrition button will be placed relative to.
    # Accepted values: gui, screen [default: gui]
    S:ButtonOrigin=gui

    # The nutrition button's X position, relative to its anchor point. [range: -1000 ~ 1000, default: 134]
    I:ButtonXPosition=105

    # The nutrition button's Y position, relative to its anchor point. [range: -1000 ~ 1000, default: 61]
    I:ButtonYPosition=61

    # If the nutrition GUI should be enabled [default: true]
    B:EnableGui=true

    # If the nutrition button should be shown on player inventory (hotkey will still function). [default: true]
    B:EnableGuiButton=true

    # If foods should show their nutrients on hover. [default: true]
    B:EnableTooltips=true
}


logging {
    # Log foods which cannot be found but are still listed in nutrients file. [default: false]
    B:LogMissingFood=false

    # Log foods which have been found but do not have any associated nutrients. [default: false]
    B:LogMissingNutrients=false
}


nutrition {
    # Allow player to continue eating even while full.
    # This setting may upset balance (and tummies), but is necessary for playing in peaceful mode. [default: false]
    B:AllowOverEating=false

    # The nutrition value subtracted from foods per additional nutrient, as a percentage.
    # This is to prevent large, complex foods from being too powerful.
    # (eg. 1 nutrient = 0% loss, 2 nutrients = 15% loss, 3 nutrients = 30% loss) [range: 0 ~ 100, default: 15]
    I:LossPerNutrient=15

    # Value to multiply base nutrition by for each food (eg. 0.5 to halve nutrition gain). [range: 0.0 ~ 100.0, default: 1.0]
    S:NutritionMultiplier=1.0

    # The starting nutrition level for new players. [range: 0 ~ 100, default: 50]
    I:StartingNutrition=50
}


"nutrition decay" {
    # Global value to multiply decay rate by (eg. 0.5 halves the rate, 2.0 doubles it).  This can also be set per-nutrient. [range: -100.0 ~ 100.0, default: 1.0]
    S:DecayMultiplier=1.0

    # Enable nutrition decay when hunger drains. [default: true]
    B:EnableDecay=true
}


