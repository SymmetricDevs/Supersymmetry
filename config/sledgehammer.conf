general {
    # For debugging purposes
    debug=false
    locale="en_us"
    locale-override {}
    # False: Mod will not be loaded.
    # True: Mod will be added to the classloader.
    mod {}
}
integration {
    # Biomes O' Plenty
    biomesoplenty {
        # If 'true', automatically removes boats from the world
        boat-purge=false
    }
    # Botania
    botania {
        # If 'true', prevents Botania from creating islands
        island-creation=false
    }
    # Forge
    forge {
        # Removes recipes which output blacklisted items
        blacklisted-recipe-items=[]
        # If 'true', forces permission check for OP based commands
        check-permissions=false
        # If 'true', the package containing the command class will be prepended to the permission check
        package-permissions=false
    }
    # Mist
    mist {
        # If 'true', fixes Misty World portal issues
        portal=false
    }
    # Primal
    primal {
        # If 'true', fixes https://github.com/An-Sar/PrimalCore/issues/210 (Fixed in 0.6.56 according to Dev)
        flake=false
    }
    # SpongeForge / SpongeVanilla
    sponge {
        # If 'true', prevents movement outside of the world border
        border=false
        # If 'true', prevents sending blank death messages
        death=false
    }
}
mixin {
    # AbyssalCraft
    abyssalcraft {
        # If 'true', fixes item duplication
        item-duplication=false
    }
    # Actually Additions
    actually-additions {
        # If 'true', prevents the AtomicReconstructor from using the Disruption Lens.
        disruption-lens=false
    }
    # Armor Underwear
    armor-under {
        # If 'true', fixes NullPointerException in ITemperatureChangeable::clearBonusTemperature.
        clear-bonus-temperature=false
    }
    # Astral Sorcery
    astral-sorcery {
        # If 'true', fixes data serializers registration.
        data-serializers=false
    }
    # Barrels, Drums, Storage & More
    bdsm {
        # If 'true', process PacketBdsm on the Main Thread
        player-interact=false
    }
    # Better Questing
    betterquesting {
        # If 'true', waits for enqueued tasks to complete
        await-io=false
        # For debugging purposes
        debug=false
    }
    # Bewitchment
    bewitchment {
        # If 'true', disables Ritual of the Deluge
        disable-ritual-deluge=false
        # If 'true', disables Ritual of the Parched Sands
        disable-ritual-drought=false
        # If 'true', disables Ritual of the High Moon
        disable-ritual-high-moon=false
        # If 'true', disables Rite of the Rising Twigs
        disable-ritual-rising-twigs=false
        # If 'true', disables Ritual of the Sands of Time
        disable-ritual-sands-of-time=false
        # If 'true', disables Ritual of Solar Glory
        disable-ritual-solar-glory=false
        # If 'true', prevents Friendship Potion & Thyrsus from taming already tamed mobs
        prevent-tame-stealing=false
        # If 'true', prevents Friendship Potion & Thyrsus from taming mobs listed in tame-deny-list.
        tame-deny=false
        # Mobs that are not allowed to be tamed
        tame-deny-list=[
            "minecraft:ender_dragon"
        ]
    }
    # BiblioCraft
    bibliocraft {
        # If 'true', fixes AbstractMethodError caused by missing getStackInSlot method
        abstract-stack-in-slot=false
    }
    # Biomes O' Plenty
    biomesoplenty {
        # If 'true', prevents Boats from crashing the client
        boat-crash=false
    }
    # Career Bees
    careerbees {
        # If 'true', disables the acceleration effect
        disable-effect-acceleration=false
    }
    # Carry On
    carry-on {
        # If 'true', fixes a ConcurrentModificationException caused by the onWorldTick method.
        concurrent-modification-exception=false
    }
    # Champions
    champions {
        # If 'true', prevents AffixReflecting from reflecting AffixReflecting.
        reflecting=false
        # If 'true', ignores the LivingDamageEvent if the entity is damaging itself.
        self-damage=false
    }
    # Chest Transporter
    chesttransporter {
        # If 'true', fixes YabbaBarrel dropping on pickup
        yabba-barrel-drop=false
    }
    # Construct's Armory
    conarm {
        # If 'true', fixes magnetic trait voiding items
        magnetic-void=false
    }
    # Minecraft
    core {
        # If 'true', advancements will not be reloaded on world load.
        advancement-reload=false
        # If 'true', prints a single message instead of a stacktrace for advancement errors.
        advancement-stacktrace=false
        # If 'true', fixes banners freezing when the world is old enough (MC-63720).
        banner-freezing=false
        # If 'true', fixes NullPointerException in BiomeProvider::findBiomePosition.
        biome-provider=false
        # If 'true', prevents Grass turning into Dirt.
        block-grass=false
        # If 'true', prevents Ice turning into Water.
        block-ice=false
        # If 'true', alert players with permission (sledgehammer.broadcast.chunksave) when a chunk fails to save.
        chunk-save-alert=false
        # Items to remove from chunks.
        chunk-save-blacklist=[
            "minecraft:writable_book",
            "minecraft:written_book"
        ]
        # If 'true', removes all Entities and TileEntities from chunks that fail to save.
        chunk-save-purge-all=false
        # If 'true', removes all blacklisted items from chunks that fail to save.
        chunk-save-purge-blacklist=false
        # If 'true', generates a crash report and safely stops the server if a chunk fails to save.
        chunk-save-shutdown=false
        # If 'true', fixes BlockRendererDispatcher.renderBlockBrightness producing extremely dark blocks in certain cirumstances (MC-6932, MC-41825).
        dark-blocks=false
        # If 'true', prevents ID 0 from being assigned to entities. Fixes bugs like MC-111480.
        entity-id-offset=false
        # If 'true', prevents ConcurrentModificationException in EntityTracker.
        entity-tracker=false
        # If 'true', adjusts the despawn ranges of mobs (32/128 blocks) on low render distances. Requires fix-mobs-not-despawning so that mobs are eligible for despawning. This has no effect on Sponge as it makes these settings configurable.
        fix-impossible-mob-despawn-range=false
        # If 'true', avoids MC-2536 by running mob despawning checks in lazy chunks. This will probably break farms which rely on vanilla 1.12 mechanics. You have been warned.
        fix-mobs-not-despawning=false
        # If 'true', adds TileEntity data to the crash report from calls to 'getUpdateTag' that fail.
        get-update-tag-crash=false
        # If 'true', fixes some minor rendering glitches in vanilla.
        gl-state-bugs=false
        # If 'true', prevents crash due to invalid translation keys.
        invalid-translation=false
        # If 'true', fixes MC-134716 - Player kick exploit.
        itemstack-exploit=false
        # If 'true', makes LazyLoad Thread-safe (Should fix MC-68381).
        lazyload-thread-safe=false
        # If 'true', allows players to exit the sleep screen.
        leave-sleep=false
        # If 'true', enforces limits for books to 50 pages with 255 characters for each.
        limit-books=false
        # If 'true', fixes potential deadlock on shutdown.
        network-system=false
        # If 'true', fixes depth calculation that causes unnecessary block updates.
        optimize-liquid-drain=false
        # If 'true', prevents ConcurrentModificationException in PlayerChunkMap.
        player-chunk-map=false
        # If 'true', fixes MC-88176 (entities culled too aggresively at subchunk boundaries) and MC-72166 (banners invisible at some angles).
        premature-culling=false
        # If 'true', prevents the top of the world from being considered completely dark. Fixes MC-68565.
        roof-lighting=false
        # If 'true', changes the renderer's target FPS to be 30 (matching 1.15-pre1) instead of the maximum FPS in game options. This helps with chunks not loading on the client.
        speed-up-chunk-rendering=false
        # If 'true', prevents unloading TileEntities from loading chunks
        tile-entity-chunk-unload=false
        # If 'true', removes the box around the player at low Y levels.
        void-box=false
        # If 'true', increases the maximum length for a WorldType name in SPacketJoinGame packet.
        world-type-length=false
    }
    # DankNull
    dank-null {
        # If 'true', fixes NullPointerException caused by PacketConfigSyncHandler
        packet-config-sync=false
    }
    # Embers
    embers {
        # If 'true', fixes item duplication
        item-duplication=false
    }
    # Ender IO
    enderio {
        # If 'true', fixes EnderIO RecipeFactory logging
        recipe-factory-stacktrace=false
        # If 'true', prevents Redstone Conduits from keeping chunks loaded
        redstone-conduit-chunk-unload=false
    }
    # Ender Storage
    enderstorage {
        # If 'true', fixes NullPointerException caused by handleVisiblityPacket
        visibility-packet=false
    }
    # Flux Networks
    flux-networks {
        # If 'true', fixes item spawn packet exploit.
        packet-exploit=false
    }
    # Forge
    forge {
        # If 'true', reverts Forge-chunkloaded chunk ticking to behave like vanilla (requiring a 5x5 area).
        entity-chunk-churn=false
        # If 'true', reduces network usage by postponing flush.
        flush-network-on-tick=false
        # If 'true', disables SearchTree reloading (Speeds up server connection process).
        nuke-search-tree=false
        # If 'true', disables SearchTree reloading on shutdown.
        nuke-search-tree-shutdown=false
        # If 'true', cancels packets sent by LootBags due to poorly written networking.
        packet-spam=false
        # If 'true', prevents mods from writing CustomTileData, This isn't allowed.
        tile-entity-forge-data=false
    }
    # Immersive Engineering
    immersiveengineering {
        # If 'true', fixes offset deserialization.
        offset-deserialization=false
    }
    # Industrial Foregoing
    industrialforegoing {
        # If 'true', fixes NullPointerException in FluidPumpTile::work.
        fluid-pump-work=false
    }
    # Integrated Dynamics
    integrateddynamics {
        # If 'true', fixes item spawn packet exploit.
        packet-exploit=false
    }
    # Just Enough Throwing In Fluids
    jetif {
        # If 'true', fixes Flux Networks integration.
        flux-networks=false
    }
    # JourneyMap
    journeymap {
        # If 'true', disables certain debugging messages.
        debug-spam=false
    }
    # KubeJS
    kubejs {
        # If 'true', fixes ArrayIndexOutOfBoundsException on server shutdown
        server-stopping=false
    }
    # Logistics Pipes
    logistics-pipes {
        # If 'true', fixes chunk loading caused by DoubleCoordinates::blockExists
        block-exists=false
    }
    # Matter Overdrive
    matter-overdrive {
        # If 'true', fixes IllegalArgumentException caused by the canConnectFromSide method.
        can-connect-from-side=false
    }
    # Morph
    morph {
        # If 'true', fixes NullPointerException caused by onUpdate
        entity-update=false
    }
    # Mowzie's Mobs
    mowziesmobs {
        # If 'true', fixes ConcurrentModificationException
        entity-tracker=false
    }
    # Nature's Aura
    naturesaura {
        # If 'true', disables the Shifting Sundial.
        disable-time-changer=false
    }
    # PneumaticCraft: Repressurized
    pneumaticcraft {
        # If 'true', disables Pneumatic Helmet hacking
        disable-hacking=false
    }
    # Primitive Mobs
    primitive-mobs {
        # If 'true', fixes NullPointerException caused by MessagePrimitiveJumping
        networking=false
        # If 'true', fixes https://github.com/Daveyx0/PrimitiveMobs/issues/59 (Sponge only).
        traveling-merchant=false
    }
    # Primitive Crafting
    primitivecrafting {
        # If 'true', fixes item spawn packet exploit.
        packet-exploit=false
    }
    # Project Red
    project-red {
        # If 'true', fixes https://github.com/MrTJP/ProjectRed/issues/1485.
        gates-pull-wrong-signals=false
        # If 'true', fixes item spawn packet exploit.
        packet-exploit=false
    }
    # Pyrotech
    pyrotech {
        # If 'true', fixes item handling in TileActivePile which is incompatible with Sponge
        tile-active-pile-sponge=false
    }
    # Quantum Minecraft Dynamics
    qmd {
        # If 'true', fixes NullPointerException caused by getTileInventory
        tile-inventory=false
    }
    # Quark
    quark {
        # If 'true', disables Improved Sleeping Module.
        improved-sleeping=false
    }
    # Random Things
    randomthings {
        # If 'true', disables Eclipsed Clock
        disable-eclipsed-clock=false
    }
    # Real Filing Cabinet
    realfilingcabinet {
        # If 'true', fixes item duplication
        item-duplication=false
    }
    # Ruins (Structure Spawning System)
    ruins {
        # If 'true', disables ruins debugging messages.
        message-spam=false
    }
    # SpongeForge / SpongeVanilla
    sponge {
        # If 'true', catches an IllegalStateException thrown by Sponge.
        advancement-initialized=false
        # If 'true', disables inventory debugging messages.
        inventory-debug=false
        # If 'true', prevents or deletes any items that attempt to teleport across dimensions.
        item-teleport=false
        # Don't prevent these items from teleporting.
        item-teleport-whitelist=[
            "draconicevolution:ender_energy_manipulator"
        ]
        # If 'true', prevents StackOverflow on writeToNBT.
        tile-entity-stack-overflow=false
    }
    # Storage Network
    storage-network {
        # If 'true', fixes item spawn packet exploit.
        packet-exploit=false
    }
    # Tinkers' Evolution
    tconevo {
        # If 'true', fixes unintended upgrading of Draconic Modifiers
        draconic-upgrade=false
        # If 'true', fixes NoClassDefFoundError with Redstone Repository
        redstone-repository=false
    }
    # Tinkers Construct
    tconstruct {
        # If 'true', prevents LevelAspects from exceeding the maximum level
        clamp-level-aspect=false
        # If 'true', fixes magnetic trait voiding items
        magnetic-void=false
        # If 'true', fixes item duplication when renaming items in the Tool Forge
        text-sync=false
    }
    # Thaumic Wonders
    thaumicwonders {
        # If 'true', prevents the Meteorb Action from changing the weather.
        meteorb-action=false
        # If 'true', prevents the Timewinder Action from changing the time.
        timewinder-action=false
    }
    # Tomb Many Graves
    tomb-many-graves {
        # If 'true', disables TombManyGraves functionality.
        functionality=false
    }
    # Topography
    topography {
        # If 'true', disables onDimensionChange event.
        dimension-change=false
    }
    # Totemic
    totemic {
        # If 'true', prevents the Rain Dance Ceremony from changing the weather.
        rain-dance-ceremony=false
    }
    # Vaultopic - Early Inventory Management
    vaultopic {
        # If 'true', fixes NullPointerException in Projector::loadMatrixes.
        load-matrixes=false
        # If 'true', processes VTOpenVice and VTRecipe packets on the Main Thread
        packet-handling=false
    }
    # Hearth Well
    wolforce {
        # If 'true', fixes inventory handling in BlockGraftingTray which is incompatible with Sponge
        block-grafting-tray-sponge=false
    }
}
